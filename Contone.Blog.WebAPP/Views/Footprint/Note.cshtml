@using Contione.Blog.Infrastructure.BlogEnum;
<!DOCTYPE html>
<html lang="zh">
<head>
    <!-- 本页特有css -->
    <style>
        .grid {
            padding: 10px;
            background: #fff;
            float: left;
            margin: 8px;
            -moz-transition: top 1s ease, left 1s ease;
            -o-transition: top 1s ease, left 1s ease;
            -webkit-transition: top 1s ease, left 1s ease;
            transition: top 1s ease, left 1s ease;
            border: 1px solid #ddd;
            position: relative;
        }

            .grid .title {
                text-align: center;
                color: #333;
                font-weight: bold;
                font-family: 'Adobe Kaiti Std';
                font-size: 16px;
            }

            .grid .content {
                line-height: 1.5;
                padding: 10px;
                background-color: #333;
                color: #ddd;
                min-height: 80px;
                word-break: break-all;
                margin: 10px 0;
            }

            .grid .tags {
                margin-bottom: 10px;
            }

                .grid .tags span + span {
                    margin-left: 5px;
                }

            .grid .time {
                color: #999;
                text-align: center;
                font-size: 12px;
            }
    </style>
</head>

<body>
    <!-- 头部 -->
    @(await Html.PartialAsync("_Footer", CommonEnum.TypeHtml._点点滴滴))

    <!-- 主体 -->
    <div class="blog-body">
        <!-- 页面主体内容 -->
        <div class="layui-container">
            <blockquote class="layui-elem-quote sitemap shadow">
                <i class="layui-icon">&#xe715;</i>
                <span class="layui-breadcrumb" lay-separator=">">
                    <a href="index.html">首页</a>
                    <a><cite>文章归档</cite></a>
                </span>
            </blockquote>
            <div class="blog-nav-two shadow">
                <div class="layui-breadcrumb" lay-separator="|">
                    <a href="/footprint/timeline"><span>轻言细语</span></a>
                    <a href="/footprint/Record"><span>文章归档</span></a>
                    <a href="/footprint/note" class="selected"><span>笔记标签</span></a>
                </div>
            </div>
            <div class="blog-panel">
                <div id="container" style="position:relative;margin:-8px;"></div>
            </div>
        </div>
    </div>
    <!-- 底部 -->
    @(await Html.PartialAsync("_Footer", CommonEnum.TypeHtml._底部))
    <!-- 移动端侧边导航 -->
    @(await Html.PartialAsync("_Footer", CommonEnum.TypeHtml._移动端侧边导航))
    <!-- 侧边导航遮罩 -->
    @(await Html.PartialAsync("_Footer", CommonEnum.TypeHtml._侧边导航遮罩))

    <!-- 本页特有js -->
    <script src="/js/blocksit.js"></script>
    <script>
        layui.use(['jquery', 'flow', 'util'], function ($, flow, util) {

            function col() {
                var width = $(window).width(),
                    colNum = 4;

                if (width >= 1200) {
                    colNum = 4; //大屏幕 4列
                } else if (width >= 992) {
                    colNum = 3; //中屏幕 3列
                } else if (width >= 768) {
                    colNum = 2; //小屏幕 2列
                } else {
                    colNum = 1; //超小屏幕 1列
                }

                return colNum;
            };
            //模拟数据
            var dataM = [{
                "title": "分页获取总页数",
                "content": "int totalPage = (totalCount  +  pageSize  - 1) / pageSize; ",
                "tag": "分页",
                "status": 1,
                "createTime": "2018-05-09 00:00:00",
                "id": 2
            },
            {
                "title": "mousedown模拟双击事件",
                "content": "var lastTime = 0;\n <br/>          $(elem).on('mousedown', function () {\n <br/>              var thisTime = new Date().getTime();\n <br/>              if (thisTime - lastTime < 300) {\n <br/>                  //触发双击事件\n <br/>              }\n <br/>              lastTime = thisTime;\n <br/>          });",
                "tag": "mousedown、双击事件",
                "status": 1,
                "createTime": "2018-05-09 16:00:55",
                "id": 10
            },
            {
                "title": "计算滚动条宽度",
                "content": "    function getScrollbarWidth() {\n        var oP = document.createElement('p'),\n            styles = {\n                width: '100px',\n                height: '100px',\n                overflowY: 'scroll'\n            },\n            i,\n            scrollbarWidth;\n        for (i in styles) oP.style[i] = styles[i];\n        document.body.appendChild(oP);\n        scrollbarWidth = oP.offsetWidth - oP.clientWidth;\n        oP.remove();\n        return scrollbarWidth;\n    }",
                "tag": "js、滚动条宽度",
                "status": 1,
                "createTime": "2018-05-09 16:29:11",
                "id": 11
            },
            {
                "title": "保留两位小数并补全",
                "content": "function toDecimal2(x) {\n            var f = parseFloat(x);\n            if (isNaN(f)) {\n                return false;\n            }\n            var f = Math.round(x * 100) / 100;\n            var s = f.toString();\n            var rs = s.indexOf('.');\n            if (rs < 0) {\n                rs = s.length;\n                s += '.';\n            }\n            while (s.length <= rs + 2) {\n                s += '0';\n            }\n            return s;\n        }",
                "tag": "js、小数保留",
                "status": 1,
                "createTime": "2018-05-09 16:30:27",
                "id": 12
            },
            {
                "title": "查询父子级数据",
                "content": ";with temp as (\n\nselect * from Sys_Dept where SysNo = 1 \n\nunion all \n\nselect Sys_Dept.* from temp inner JOIN Sys_Dept ON temp.SysNo = Sys_Dept.ParentSysNo  \n\nwhere Sys_Dept.State <> 0) \n\n\n\nselect * from temp",
                "tag": "SQL、父子级、树形结构",
                "status": 1,
                "createTime": "2018-05-09 16:32:08",
                "id": 13
            },
            {
                "title": "javascript生成Guid",
                "content": "function getGuid() {\n                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n                    return v.toString(16);\n                });\n            }",
                "tag": "js、guid",
                "status": 1,
                "createTime": "2018-05-09 16:45:16",
                "id": 14
            },
            {
                "title": "javascript获取QueryString值",
                "content": "function getQueryStringByName(name){\n\n     var result = location.search.match(new RegExp(\"[\\?\\&]\" + name+ \"=([^\\&]+)\",\"i\"));\n\n     if(result == null || result.length < 1){\n\n         return \"\";\n\n     }\n\n     return result[1];\n\n}",
                "tag": "js、querystring",
                "status": 1,
                "createTime": "2018-05-09 16:50:22",
                "id": 15
            }
            ];
            flow.load({
                elem: '#container',
                end: ' ',
                isAuto: true,
                done: function (page, next) {
                    var lis = [],
                        pageSize = 8;
                    //这是加载模拟数据
                    layui.each(dataM, function (index, item) {
                        var html =
                            '<div class="grid animated fadeInUp"><h4 class="title">' +
                            item.title +
                            '</h4><div class="content">' + item
                                .content + '</div><div class="tags">';
                        var tags = item.tag.split('、');
                        layui.each(tags, function (index2, item2) {
                            html +=
                                '<span class="layui-badge-rim"><i class="fa fa-tag fa-fw"></i>' +
                                item2 + '</span>';
                        });
                        html += '</div><p class="time">' + util
                            .timeAgo(item.createTime, false) +
                            '</p></div>';
                        lis.push(html);
                    });

                    //计算总页数
                    var pages = 5;

                    //将数据渲染在容器中
                    next(lis.join(''), page < pages);

                    //使用blocksit进行瀑布流布局
                    $('#container').BlocksIt({
                        numOfCol: col(),
                        offsetX: 8,
                        offsetY: 8
                    });
                    //Ajax请求数据
                    //$.ajax({
                    //    url: '/api/all/getnotes',
                    //    data: {
                    //        pageSize: pageSize,
                    //        pageIndex: page
                    //    },
                    //    success: function (res) {
                    //        if (res.code === 1) {
                    //            //根据后台响应的数据组织html
                    //            layui.each(res.data, function (index, item) {
                    //                var html =
                    //                    '<div class="grid animated fadeInUp"><h4 class="title">' +
                    //                    item.title +
                    //                    '</h4><div class="content">' + item
                    //                        .content + '</div><div class="tags">';
                    //                var tags = item.tag.split('、');
                    //                layui.each(tags, function (index2, item2) {
                    //                    html +=
                    //                        '<span class="layui-badge-rim"><i class="fa fa-tag fa-fw"></i>' +
                    //                        item2 + '</span>';
                    //                });
                    //                html += '</div><p class="time">' + util
                    //                    .timeAgo(item.createTime, false) +
                    //                    '</p></div>';
                    //                lis.push(html);
                    //            });

                    //            //计算总页数
                    //            var pages = (res.count + pageSize - 1) / pageSize;

                    //            //将数据渲染在容器中
                    //            next(lis.join(''), page < pages);

                    //            //使用blocksit进行瀑布流布局
                    //            $('#container').BlocksIt({
                    //                numOfCol: col(),
                    //                offsetX: 8,
                    //                offsetY: 8
                    //            });
                    //        }
                    //    },
                    //    error: function () {
                    //        //这是加载模拟数据
                    //        layui.each(dataM, function (index, item) {
                    //            var html =
                    //                '<div class="grid animated fadeInUp"><h4 class="title">' +
                    //                item.title +
                    //                '</h4><div class="content">' + item
                    //                    .content + '</div><div class="tags">';
                    //            var tags = item.tag.split('、');
                    //            layui.each(tags, function (index2, item2) {
                    //                html +=
                    //                    '<span class="layui-badge-rim"><i class="fa fa-tag fa-fw"></i>' +
                    //                    item2 + '</span>';
                    //            });
                    //            html += '</div><p class="time">' + util
                    //                .timeAgo(item.createTime, false) +
                    //                '</p></div>';
                    //            lis.push(html);
                    //        });

                    //        //计算总页数
                    //        var pages = 5;

                    //        //将数据渲染在容器中
                    //        next(lis.join(''), page < pages);

                    //        //使用blocksit进行瀑布流布局
                    //        $('#container').BlocksIt({
                    //            numOfCol: col(),
                    //            offsetX: 8,
                    //            offsetY: 8
                    //        });
                    //    }
                    //});
                }
            });

            $(window).resize(function () {
                $('#container').BlocksIt({
                    numOfCol: col(),
                    offsetX: 8,
                    offsetY: 8
                });
            });
        });
    </script>
</body>

</html>